*longline.txt*  Avoid Long Lines.			*longline*

Author:  Nate Soares <http://so8r.es/>
License: Same terms as Vim itself (see |license|)

=============================================================================
CONTENTS					*longline-contents*
	    1. Introduction..............................|longline-intro|
	    2. Configuration.............................|longline-config|
	    3. Commands..................................|longline-commands|
	    4. Status line...............................|longline-statusline|
	    5. Functions.................................|longline-functions|
	    6. Mappings..................................|longline-mappings|
	    7. About.....................................|longline-about|

=============================================================================
INTRODUCTION					*longline-intro*

LongLine detects lines that are too long. It helps you:

* Jump between overlong lines
* Highlight the overflowing parts of long lines
* Add a flag to your statusline when a line is too long

The length of lines allowed is controlled by the 'textwidth' setting, which is
buffer-local. Remember that you can control line wrapping using the t format
option. See |fo-table|.

=============================================================================
CONFIGURATION					*longline-config*

						*g:loaded_longline*
use this to disable the plugin completely:
>
	let g:loaded_longline = 1
<


						*g:longline_autohl*
Whether or not to automatically highlight the ends of lines that are too long.
Disabled by default.

						*g:longline_automap*
Makes the default key bindings. See |longline-mappings|. Disabled by default.

						*g:longline_defcmds*
Whether or not to define the longline commands. Enabled by default. Use this
to prevent the commands from being defined if (for example) you want to give
the commands different names.

						*g:longline_matchgroup*
The matchgroup which matches the overflowing parts of long lines. It is set to
'Error' by default. See |group-name|. For angrier (red background) long
lines, try setting this parameter to 'ErrorMsg'.


=============================================================================
COMMANDS					*longline-commands*

:LongLineNext					*:LongLineNext*
	Jumps the cursor to the next line that is too long.

:LongLinePrev					*:LongLinePrev*
Jumps the cursor to the previous line that is too long.

:LongLineShow					*:LongLineShow*
Highlights the parts of lines in a file that are too long.

:LongLineHide					*:LongLineHide*
Turns off long line highlighting.

:LongLineToggle					*:LongLineToggle*
Toggles long line highlighting.

=============================================================================
STATUSLINE					*longline-statusline*

Longline does not change your status line, but it does provide hooks for you
to add longline warnings to your status line manually.

You are encouraged to write your own statusline function using
|longline#exists()| if you prefer different formatting.

longline#status#flag()				*longline#status#flag()*
	Returns the most severe active flag. Currently, this is a future-proof
	alias for |longline#status#warning()|.

longline#status#warning()			*longline#status#warning()*
	[…]	if the file has lines that are too long.
	Used as follows:
>
		set statusline+=%#WarningMsg#
		set statusline+=%{longline#status#warning()}
		set statusline+=%*
<

=============================================================================
FUNCTIONS					*longline-extras*

						*longline#exists()*
This function returns true if a long line exists in the file. It can be used
in various scripts or to make your own flavor of statusline flag. For example,
emulate |longline#status#warning()|, do
>
	set statusline+=%#WarningMsg#
	set statusline+=%{longline#exists()?'[…]':''}
	set statusline+=%*
<

=============================================================================
MAPPINGS					*longline-mappings*

Longline does not change your mappings, by default. Instead, it provides the
following |<Plug>| mappings:
>
	<Plug>longline#next
	<Plug>longline#prev
	<Plug>longline#toggle
	<Plug>longline#show
	<Plug>longline#hide
<
If you like the following mappings:
>
	nmap <leader>ln <Plug>longline#next
	nmap <leader>lp <Plug>longline#prev
	nmap <leader>ls <Plug>longline#show
	nmap <leader>lh <Plug>longline#hide
	nmap <leader>lt <Plug>longline#toggle
<
then set |g:longline_automap| to 1. You're encouraged to customize your
mappings to your own taste using the plug mappings.

=============================================================================
ABOUT						*longline-about*

Grab the latest version or report a bug on GitHub:

http://github.com/Soares/longline.vim

 vim:tw=78:ts=8:sw=0:sts=8:noet:ft=help:norl:
